{"ast":null,"code":"var _jsxFileName = \"/home/matt/Documents/new-personal-projects/more-complex-menu/src/components/Submenu.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport { useGlobalContext } from \"./context\";\nimport { sublinks } from \"./data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Sidebar = () => {\n  _s();\n\n  const {\n    isSubmenuOpen,\n    location,\n    page: {\n      page,\n      links\n    }\n  } = useGlobalContext();\n  const container = useRef(null); // defines 'container' as a reference to nothing, for the time being\n\n  useEffect(() => {\n    const submenu = container.current; // defines 'submenu' as the div referenced in the return statement\n\n    const {\n      center,\n      bottom\n    } = location; // destructures an object called 'location' - two properties \n\n    submenu.style.left = `${center}px`;\n    submenu.style.top = `${bottom}px`; // takes the actual location of the submenu and sets them to the properties of the'location' object.\n\n    submenu.style.color = 'black';\n  }, [location]); // every time the location objet changes (different properties of left/top set), the render location of submenu changes (rerenders)\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `${isSubmenuOpen ? 'submenu show-submenu ' : 'submenu'}`,\n      ref: container,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: page\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 1\n      }, this), links.map((link, index) => {\n        const {\n          url,\n          label\n        } = link;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: url,\n            children: label\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n};\n\n_s(Sidebar, \"bEq1xdnPkoLFWq6yc9jWq6ynpRo=\", false, function () {\n  return [useGlobalContext];\n});\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["/home/matt/Documents/new-personal-projects/more-complex-menu/src/components/Submenu.js"],"names":["React","useEffect","useRef","useGlobalContext","sublinks","Sidebar","isSubmenuOpen","location","page","links","container","submenu","current","center","bottom","style","left","top","color","map","link","index","url","label"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAwC,OAAxC;AACA,SAASC,gBAAT,QAAiC,WAAjC;AACA,SAASC,QAAT,QAAyB,QAAzB;;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AACtB,QAAM;AAACC,IAAAA,aAAD;AAAgBC,IAAAA,QAAhB;AAA0BC,IAAAA,IAAI,EAAE;AAACA,MAAAA,IAAD;AAAOC,MAAAA;AAAP;AAAhC,MAAiDN,gBAAgB,EAAvE;AACA,QAAMO,SAAS,GAAGR,MAAM,CAAC,IAAD,CAAxB,CAFsB,CAGtB;;AAEAD,EAAAA,SAAS,CAAC,MAAO;AACjB,UAAMU,OAAO,GAAGD,SAAS,CAACE,OAA1B,CADiB,CAEjB;;AACA,UAAM;AAACC,MAAAA,MAAD;AAASC,MAAAA;AAAT,QAAmBP,QAAzB,CAHiB,CAIjB;;AACAI,IAAAA,OAAO,CAACI,KAAR,CAAcC,IAAd,GAAsB,GAAEH,MAAO,IAA/B;AACAF,IAAAA,OAAO,CAACI,KAAR,CAAcE,GAAd,GAAqB,GAAEH,MAAO,IAA9B,CANiB,CAOjB;;AACAH,IAAAA,OAAO,CAACI,KAAR,CAAcG,KAAd,GAAsB,OAAtB;AAEC,GAVQ,EAUP,CAACX,QAAD,CAVO,CAAT,CALsB,CAgBtB;;AAGI,sBACJ;AAAA,2BACA;AAAK,MAAA,SAAS,EAAG,GAAED,aAAa,GAAG,uBAAH,GAA6B,SAAU,EAAvE;AAA0E,MAAA,GAAG,EAAGI,SAAhF;AAAA,8BAEA;AAAA,kBAAKF;AAAL;AAAA;AAAA;AAAA;AAAA,cAFA,EAGCC,KAAK,CAACU,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAgB;AAC1B,cAAM;AAACC,UAAAA,GAAD;AAAMC,UAAAA;AAAN,YAAeH,IAArB;AACE,4BAAO;AAAA,iCACH;AAAe,YAAA,IAAI,EAAEE,GAArB;AAAA,sBAA2BC;AAA3B,aAAQF,KAAR;AAAA;AAAA;AAAA;AAAA;AADG;AAAA;AAAA;AAAA;AAAA,gBAAP;AAEF,OAJA,CAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,mBADI;AAaH,CAhCD;;GAAMhB,O;UACiDF,gB;;;KADjDE,O;AAkCN,eAAeA,OAAf","sourcesContent":["import React, { useEffect, useRef} from \"react\";\nimport { useGlobalContext } from \"./context\";\nimport { sublinks } from \"./data\";\n\nconst Sidebar = () => {\nconst {isSubmenuOpen, location, page: {page, links}} = useGlobalContext()\nconst container = useRef(null)\n// defines 'container' as a reference to nothing, for the time being\n\nuseEffect(() =>  {\nconst submenu = container.current;\n// defines 'submenu' as the div referenced in the return statement\nconst {center, bottom} = location\n// destructures an object called 'location' - two properties \nsubmenu.style.left = `${center}px`\nsubmenu.style.top = `${bottom}px`\n// takes the actual location of the submenu and sets them to the properties of the'location' object.\nsubmenu.style.color = 'black'\n\n},[location] )\n// every time the location objet changes (different properties of left/top set), the render location of submenu changes (rerenders)\n\n\n    return (\n<>\n<div className={`${isSubmenuOpen ? 'submenu show-submenu ' : 'submenu'}`} ref ={container}>\n    {/* ref - sets this div (the submenu) as the reference to container variable */}\n<h4>{page}</h4>\n{links.map((link, index)=> {\n const {url, label} = link;\n   return <div>\n       <a key={index} href={url}>{label}</a></div> \n})}\n</div>\n</>\n    )\n}\n\nexport default Sidebar;"]},"metadata":{},"sourceType":"module"}